class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        int n = nums.size();

        sort(nums.begin(),nums.end());
        set<vector<int>>st;

        for(int i=0;i<n;i++)
        {
            long target1 = target-nums[i];

            for(int j=i+1;j<n;j++)
            {
                long target2 = target1-nums[j];
                int low = j+1, high = n-1;

                while(low<high)
                {
                    // int mid = (low+high)/2;

                    if(nums[low] + nums[high]<target2)
                    {
                        low += 1;
                    }
                    else if(nums[low] + nums[high]>target2)
                    {
                        high -= 1;
                    }
                    else
                    {
                        vector<int>cur;
                        cur.push_back(nums[low]);
                        cur.push_back(nums[high]); 
                        cur.push_back(nums[i]);
                        cur.push_back(nums[j]);  
                        st.insert(cur);
                        low += 1;
                        high -= 1;
                    }
                }
            }
        }

        vector<vector<int>>ans;

        for(auto ele:st)ans.push_back(ele);

        return ans;

    }
};
