class Solution {
public:
    int threeSumClosest(vector<int>& nums, int target) {
        int n = nums.size();

        int ans;
        int dif = INT_MAX;  

        sort(nums.begin(),nums.end());

        for(int i=0;i<n;i++)
        {
            int newTarget = target-nums[i];

            int low = i+1, high = n-1;

            while(low<high)
            {
                if(nums[low] + nums[high]<newTarget)
                {
                    if(dif>abs(newTarget-nums[low]-nums[high]))
                    {
                        ans = nums[low]+nums[high] + nums[i];
                        dif = abs(newTarget-nums[low]-nums[high]);
                    }
                    low += 1;
                }
                else if(nums[low]+nums[high]>newTarget)
                {
                    if(dif>abs(newTarget-nums[low]-nums[high]))
                    {
                        ans = nums[low]+nums[high] + nums[i];
                        dif = abs(newTarget-nums[low]-nums[high]);
                    }
                    high -= 1;
                }
                else
                {
                    if(dif>abs(newTarget-nums[low]-nums[high]))
                    {
                        ans = nums[low]+nums[high] + nums[i];
                        dif = abs(newTarget-nums[low]-nums[high]);
                    }
                    low += 1;
                    high -= 1;
                }
            }
        }

        return ans;

    }
};
