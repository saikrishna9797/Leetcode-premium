/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int carry = 0;

        ListNode* ans = new ListNode(-1);
        ListNode* head = ans;

        while(l1  && l2)
        {
            int val1 = l1->val;
            int val2 = l2->val;
            l1 = l1->next;
            l2 = l2->next;

            int nxtVal = (val1+val2+carry)%10;
            carry = (val1+val2+carry)/10;

            ListNode* cur = new ListNode(nxtVal);
            head->next = cur;
            head = cur;
        }

        while(l1)
        {
            int val1 = l1->val;
            l1 = l1->next;
            int nxtVal = (val1+carry)%10;
            carry = (val1+carry)/10;

            ListNode* cur = new ListNode(nxtVal);
            head->next = cur;
            head = cur;
        }

        while(l2)
        {
            int val2 = l2->val;
            l2 = l2->next;
            int nxtVal = (val2+carry)%10;
            carry = (val2+carry)/10;

            ListNode* cur = new ListNode(nxtVal);
            head->next = cur;
            head = cur;            
        }

        if(carry)
        {
            ListNode* cur = new ListNode(carry);
            head->next = cur;
            head = cur;            
        }

        return ans->next;
    }
};
